# info
# ----

# use a variable for brevity and for easily changing the file
comparfile=annot_compar-exomes_yri_chr2122.tsv.lz4
sregfile=sreg-exomes_yri_chr2122.tsv.lz4

# which fields are present in the file (cg select -h)
cg select -h annot_compar-exomes_yri_chr2122.tsv.lz4 | less
# You can use $comparfile instead of the filename, show only fields with impact
cg select -h $comparfile | grep impact

# which samples are present in the file (cg select -n)
cg select -n $comparfile | less
# which analyses are present in the file (cg select -a)
cg select -a $comparfile | less
# gatk only
cg select -a $comparfile | grep gatk
# how many gatk only
cg select -a $comparfile | grep gatk | wc -l

# fields
# ------

# show only some fields (-f option) and save to a new file
# use \ to escape newline (continue on next line)
cg select -f 'chromosome begin end type ref alt sequenced-*' $comparfile temp.tsv
# Show this new file
less -S temp.tsv

# query
# -----
# show only some lines (-q)

# extract region (chromosome has to be correct as in the file)
cg select -q '$chromosome == "21" && $end > 44000000 && $begin < 50000000' $comparfile | less -S
# extract region, a bit easier, and chromosome can have extra chr or not
cg select -q 'region("chr21",44000000,50000000)' $comparfile | less -S
# or also
cg select -q 'region("chr21:44000000-50000000")' $comparfile | less -S

# select only coding variants (according to refgene only): check if impact has CDS somewhere in it
cg select -q '$refGene_impact regexp "CDS"' $comparfile exome.tsv
# number of lines in file (including header)
wc exome.tsv
# using select -g, header lines are not counted
cg select -g all exome.tsv

# we can be more specific using a list specifying all possible (complete) matches, e.g. all CDS, but not CDSsilent
# here we count the number by piping the result to "cg select -g all"
cg select -q '$refGene_impact shares {CDSDEL CDSFRAME CDSINS CDSMIS CDSNONSENSE CDSSPLICE CDSSTART CDSSTOP}' $comparfile | cg select -g all

# let's try with some more gene sets (just an example; or is not really needed here as intGene actually includes the full refGene)
cg select -q '$refGene_impact regexp "CDS" or $intGene_impact regexp "CDS"' $comparfile | wc
# we can do this shorter using count
cg select -q 'count($refGene_impact, $intGene_impact, regexp "CDS") > 0' $comparfile | wc
# lets get everything that is transcribed and save to a file
cg select -q 'count($refGene_impact, $intGene_impact, regexp "CDS|UTR|RNA") > 0' $comparfile exome.tsv
cg select -g all exome.tsv

# The new file is also a tsv file, we can again use cg select on it
# lets use the group option to count immediately (defaults to counts)
cg select -q '$refGene_impact regexp "CDS"' -g all exome.tsv

# How many of each type of variant do we have in exome.tsv
cg select -g type exome.tsv

# How many of each type of variant per sample in exome.tsv
# "sequenced v" is very important here: we want to know the number that is catually variant for each sample
# without "sequenced v" we would the same counts for each sample (ref and unsequenced calls are also counted)
# we cannot use -q because that removes entire lines (all samples)
cg select -g 'sample {} sequenced v type' exome.tsv
# give type in columns
cg select -g 'sample {} sequenced v' -gc 'type {} count' exome.tsv

# check which lines have the variant for certain samples
cg select -q '$sequenced-gatk-rdsbwa-NA19238chr2122 == "v" or $sequenced-gatk-rdsbwa-NA19239chr2122 == "v"' $comparfile | less
# I would like to find how many variants are present in more than 2 samples whose names start with gatk-.
# We'll use sample aggregates
cg select -q 'scount($sample matches "gatk-*" and $sequenced == "v") > 2' -g all $comparfile
# sample aggregates are very flexible: count all lines where at least 2 gatk call samples are variant and have a coverage >= 20
cg select -q 'scount($sample matches "gatk-*" and $sequenced == "v" and $coverage >= 20) >= 2' -g all $comparfile

# We can add info (how many gatk variants with coverage >= 20) as a new column in the file
cg select -f 'chromosome begin end type ref alt {vcount=scount($sample matches "gatk-*" and $sequenced == "v" and $coverage >= 20)} *' $comparfile temp.tsv

# select based on previously calculated count and 1000g, only output some fields
cg select -q '$vcount > 2 and lmax($1000g3,0) < 0.05' \
    -f 'chromosome begin end type alt 1000g3 snp147 snp147Common' temp.tsv | less -S -x 12

# more filtering: higher quality variant in more than 2 samples that is rare (according to 1000g3)
cg select -q '
    $type == "snp" 
    and scount($sample matches "gatk-*" and $sequenced == "v" and $coverage >= 20 and $quality >= 50 and $cluster == "") > 2 
    and $simpleRepeat == "" && $microsat == "" && $genomicSuperDups == "" 
    and lmax($1000g3,0) < 0.01 
' $comparfile > tempsel.tsv
cg select -g all tempsel.tsv
cg select -f 'chromosome begin end type ref alt simpleRepeat microsat genomicSuperDups cluster-*' tempsel.tsv | less -S -x 15

# average coverage of variants vs reference per sample
cg select -g 'sample {}' -gc 'sequenced {v r u} avg(coverage)' $comparfile

# make hqzyg using wildcards in calculated column
cg select -f 'chromosome begin end type ref alt {hqzyg-*=if(def($coverage-*,0) >= 20 and def($quality-*,0) >= 50,$zyg-*,"u")}' compar/annot_compar-exomes_yri_chr2122.tsv.lz4 | cg select -g sample -gc 'hqzyg {} count'
# compare to zyg
cg select -g sample -gc 'zyg {} count' compar/annot_compar-exomes_yri_chr2122.tsv.lz4

# multireg queries
# ----------------

# how much region sequenced in all samples (gatk calls)
cg select -q 'count($sreg-gatk-*, == 1) == 3' $sregfile | cg covered
# How much bases covered in > 1 sample
cg select -q 'count($sreg-*, == 1) > 1' $sregfile > reg2.tsv
cg covered reg2.tsv

# what is missing from refcoding in gatk-gatk-rdsbwa-NA19238chr2122
# what is covered
cg select -q '$sreg-gatk-rdsbwa-NA19238chr2122 == 1' $sregfile reg-NA19238chr2122.tsv
# subtract from refcoding
cg regsubtract /complgen/refseq/hg19/extra/reg_hg19_refcoding.tsv.lz4 reg-NA19238chr2122.tsv > missing.tsv
# check covered
cg covered missing.tsv
# recalculate missing, but only for chr 21 and 22
cg regsubtract /complgen/refseq/hg19/extra/reg_hg19_refcoding.tsv.lz4 reg-NA19238chr2122.tsv | cg select -q '$chromosome in "21 22"' > missing.tsv

# covered in at least 2 using -g and calculated column size to immediately calculate covered region
cg select -q 'scount($sreg == 1 and $sample regexp "^gatk") >= 2' -f '{size=$end - $begin}' -g all -gc 'sum(size)' $sregfile
# covered using -g and calculated column, per sample
cg select -f '{size= $end - $begin}' -g 'sample {gatk-*} sreg 1' -gc 'sum(size)' $sregfile

# Annotation
# ----------

# annotate these missing regions
cg annotate missing.tsv annot_missing.tsv /complgen/refseq/hg19/reg_*.tsv.lz4 /complgen/refseq/hg19/gene_*.tsv.lz4

# Validation
# ----------

# select first 10 variants
cg select -q '$ROW < 10' tempsel.tsv > ptempsel.tsv
# make sequencing primers (first 20 regions)
cg makeregions ptempsel.tsv 200 > valreg.tsv
cg makeprimers valreg.tsv 600 500 /complgen/refseq/hg19 > primers-valreg.tsv
